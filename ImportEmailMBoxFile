import os
import base64
import mailbox
import time
from tqdm import tqdm
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

# Gmail API scopes
SCOPES = ['https://www.googleapis.com/auth/gmail.insert']

def get_gmail_service():
    creds = None
    if os.path.exists('token.json'):
        creds = Credentials.from_authorized_user_file('token.json', SCOPES)
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file('credential.json', SCOPES)
            creds = flow.run_local_server(port=0)
        with open('token.json', 'w') as token:
            token.write(creds.to_json())
    return build('gmail', 'v1', credentials=creds)

def import_mbox(service, mbox_file):
    print(f"üì¶ Reading mbox file: {mbox_file}")
    mbox = mailbox.mbox(mbox_file)
    total = len(mbox)
    print(f"Found {total} messages to import.\n")

    for i, msg in enumerate(tqdm(mbox, desc="Importing emails", unit="email")):
        try:
            raw = base64.urlsafe_b64encode(msg.as_bytes()).decode()
            body = {'raw': raw}
            service.users().messages().import_(userId='me', body=body).execute()
        except HttpError as e:
            if e.resp.status in [403, 429, 500, 503]:
                print(f"‚ö†Ô∏è Rate limit hit at message {i}, waiting 10 seconds...")
                time.sleep(10)
                continue
            else:
                print(f"‚ùå Error on message {i}: {e}")
        except Exception as e:
            print(f"‚ùå Unexpected error on message {i}: {e}")

    print("\n‚úÖ Import complete!")

if __name__ == '__main__':
    import sys
    if len(sys.argv) != 2:
        print("Usage: python gmail_import_mbox.py <yourfile.mbox>")
        sys.exit(1)

    mbox_file = sys.argv[1]
    if not os.path.exists(mbox_file):
        print(f"‚ùå File not found: {mbox_file}")
        sys.exit(1)

    service = get_gmail_service()
    import_mbox(service, mbox_file)
